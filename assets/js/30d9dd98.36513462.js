"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[239],{3393:(e,t,n)=>{n.r(t),n.d(t,{default:()=>p});var a=n(7378),o=n(8788),r=n(6538),l=n(5646);const u=[{country:"cn",value:5},{country:"us",value:10},{country:"ru",value:7}],c=e=>{let{countryValue:t,countryCode:n,minValue:a,maxValue:o,color:r}=e;return{fill:"US"===n?"blue":r,fillOpacity:t?.1+1.5*(t-a)/(o-a):0,stroke:"green",strokeWidth:1,strokeOpacity:.2,cursor:"pointer"}};function s(){return a.createElement(l.ZP,{color:"red",tooltipBgColor:"#D3D3D3",title:"Custom Styles Map",valueSuffix:"points",data:u,frame:!0,styleFunction:c})}const i='import * as React from "react";\nimport type { CountryContext, Data } from "react-svg-worldmap";\nimport WorldMap from "react-svg-worldmap";\n\nconst data: Data = [\n  { country: "cn", value: 5 }, // China\n  { country: "us", value: 10 }, // United States\n  { country: "ru", value: 7 }, // Russia\n];\n\nconst getStyle = ({\n  countryValue,\n  countryCode,\n  minValue,\n  maxValue,\n  color,\n}: CountryContext) => ({\n  fill: countryCode === "US" ? "blue" : color,\n  fillOpacity: countryValue\n    ? 0.1 + (1.5 * (countryValue - minValue)) / (maxValue - minValue)\n    : 0,\n  stroke: "green",\n  strokeWidth: 1,\n  strokeOpacity: 0.2,\n  cursor: "pointer",\n});\n\nexport default function App(): JSX.Element {\n  return (\n    <WorldMap\n      color="red"\n      tooltipBgColor="#D3D3D3"\n      title="Custom Styles Map"\n      valueSuffix="points"\n      data={data}\n      frame\n      styleFunction={getStyle}\n    />\n  );\n}\n';var m=n(2496);function p(){return a.createElement(o.Z,{title:"Custom styles example"},a.createElement("div",{className:m.Z.main},a.createElement(s,null),a.createElement("div",{className:m.Z.code},a.createElement(r.Z,{className:"language-tsx"},i))))}}}]);