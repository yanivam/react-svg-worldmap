"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[838],{8922:(n,e,t)=>{t.d(e,{B:()=>a,t:()=>i});const a=[{country:"cn",value:1389618778},{country:"in",value:1311559204},{country:"us",value:331883986},{country:"id",value:264935824},{country:"br",value:210301591},{country:"ng",value:208679114},{country:"ru",value:141944641},{country:"mx",value:127318112}],i=[{country:"cn",value:9770.8},{country:"in",value:2010},{country:"us",value:62794.6},{country:"id",value:3893.6},{country:"br",value:8920.8},{country:"ng",value:2028.2},{country:"ru",value:11288.9},{country:"mx",value:9673.4}]},1386:(n,e,t)=>{t.r(e),t.d(e,{default:()=>p});var a=t(7378),i=t(8788),u=t(6538),o=t(5646),r=t(8922);const l=new Map([["br","Brasil"],["cn","China"],["id","Indonesia"],["in","India"],["mx","M\xe9xico"],["ng","Nigeria"],["ru","Rusia"],["us","Estados Unidos"]]);const s=n=>{let{countryCode:e,countryValue:t,prefix:a,suffix:i}=n;return`${l.get(e.toLocaleLowerCase())??"Unknown"}: ${a}${function(n,e){if(void 0===n)return"";const t=[{value:1e9,text:" mil mill\xf3nes "},{value:1e6,text:" mill\xf3nes "},{value:1e3,text:" miles "},{value:1,text:""}].find((e=>n>=e.value));return t?(n/t.value).toFixed(e).replace(/\.0+$|(?<number>\.[0-9]*[1-9])0+$/,"$1")+t.text:""}(t,2)}${i}`};function c(){return a.createElement(o.ZP,{title:"Los diez pa\xedses principales por poblaci\xf3n",data:r.B,valueSuffix:"personas",tooltipTextFunction:s})}const d='import * as React from "react";\nimport type { CountryContext } from "react-svg-worldmap";\nimport WorldMap from "react-svg-worldmap";\nimport { populationData } from "../data/CountryData";\n\n// Spanish translation of country names\nconst localizedCountryDictionary = new Map<string, string>([\n  ["br", "Brasil"], // Brazil\n  ["cn", "China"], // China\n  ["id", "Indonesia"], // Indonesia\n  ["in", "India"], // India\n  ["mx", "M\xe9xico"], // Mexico\n  ["ng", "Nigeria"], // Nigeria\n  ["ru", "Rusia"], // Russia\n  ["us", "Estados Unidos"], // United States\n]);\n\n// Spanish number formatting for thousands, millions, and billions\n// E.g. translate the number 1000000 to "1 mill\xf3nes"\nfunction localizeNumber(num: number | undefined, digits: number) {\n  if (typeof num === "undefined") return "";\n  const magnitude = [\n    { value: 1e9, text: " mil mill\xf3nes " },\n    { value: 1e6, text: " mill\xf3nes " },\n    { value: 1e3, text: " miles " },\n    { value: 1, text: "" },\n  ].find((magnitude) => num >= magnitude.value);\n  if (magnitude) {\n    return (\n      (num / magnitude.value)\n        .toFixed(digits)\n        .replace(/\\.0+$|(?<number>\\.[0-9]*[1-9])0+$/, "$1") + magnitude.text\n    );\n  }\n  return "";\n}\n\nconst getLocalizedText = ({\n  countryCode,\n  countryValue,\n  prefix,\n  suffix,\n}: CountryContext) =>\n  `${\n    localizedCountryDictionary.get(countryCode.toLocaleLowerCase()) ?? "Unknown"\n  }: ${prefix}${localizeNumber(countryValue, 2)}${suffix}`;\n\nexport default function App(): JSX.Element {\n  return (\n    <WorldMap\n      title="Los diez pa\xedses principales por poblaci\xf3n"\n      data={populationData}\n      valueSuffix="personas"\n      tooltipTextFunction={getLocalizedText}\n    />\n  );\n}\n';var m=t(2496);function p(){return a.createElement(i.Z,{title:"Localization example"},a.createElement("div",{className:m.Z.main},a.createElement(c,null),a.createElement("div",{className:m.Z.code},a.createElement(u.Z,{className:"language-tsx"},d))))}}}]);